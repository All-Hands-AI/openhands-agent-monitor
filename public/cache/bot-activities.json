{
  "activities": [
    {
      "id": "issue-5423-2531945738",
      "type": "issue",
      "status": "no_pr",
      "timestamp": "2024-12-10T15:12:26Z",
      "url": "https://github.com/All-Hands-AI/OpenHands/issues/5423#issuecomment-2531962130",
      "title": "ISSUE no_pr 12/10/2024, 3:12:26 PM -- [Bug]: When Performing browser operations, output messages are repeated",
      "description": "### Is there an existing issue for the same bug?\r\n\r\n- [X] I have checked the existing issues.\r\n\r\n### Describe the bug and reproduction steps\r\n\r\nStart a new session and enter the prompt: `What is the area in square miles of the state of California?`\r\nThe response `Let me search for this information.` is repeated twice before the actual answer is received.\r\n\r\n### OpenHands Installation\r\n\r\nDocker command in README\r\n\r\n### OpenHands Version\r\n\r\n0.15.0\r\n\r\n### Operating System\r\n\r\nMacOS\r\n\r\n### Logs, Erro..."
    },
    {
      "id": "issue-5423-2531932774",
      "type": "issue",
      "status": "no_pr",
      "timestamp": "2024-12-10T15:04:35Z",
      "url": "https://github.com/All-Hands-AI/OpenHands/issues/5423#issuecomment-2531939912",
      "title": "ISSUE no_pr 12/10/2024, 3:04:35 PM -- [Bug]: When Performing browser operations, output messages are repeated",
      "description": "### Is there an existing issue for the same bug?\r\n\r\n- [X] I have checked the existing issues.\r\n\r\n### Describe the bug and reproduction steps\r\n\r\nStart a new session and enter the prompt: `What is the area in square miles of the state of California?`\r\nThe response `Let me search for this information.` is repeated twice before the actual answer is received.\r\n\r\n### OpenHands Installation\r\n\r\nDocker command in README\r\n\r\n### OpenHands Version\r\n\r\n0.15.0\r\n\r\n### Operating System\r\n\r\nMacOS\r\n\r\n### Logs, Erro..."
    },
    {
      "id": "pr-5498-2530407818",
      "type": "pr",
      "status": "failure",
      "timestamp": "2024-12-10T05:12:15Z",
      "url": "https://github.com/All-Hands-AI/OpenHands/pull/5498#issuecomment-2530416981",
      "title": "PR failure 12/10/2024, 5:12:15 AM -- Fix issue #5492: [Bug]: Regression on Anthropic due to empty content hack for Bedrock",
      "description": "This pull request fixes #5492.\n\nThe issue has been successfully resolved. The PR addresses the root cause by:\n\n1. Making the empty content removal logic provider-specific, only applying it to Bedrock\n2. Modifying the message serialization to pass the provider information through the pipeline\n3. Adding comprehensive test coverage to verify the behavior works correctly for both Bedrock and Anthropic providers\n\nThe changes directly fix the reported KeyError by ensuring the 'content' key remains pre..."
    },
    {
      "id": "issue-5480-2529235979",
      "type": "issue",
      "status": "pr_open",
      "timestamp": "2024-12-10T04:12:42Z",
      "url": "https://github.com/All-Hands-AI/OpenHands/issues/5480#issuecomment-2530257505",
      "title": "ISSUE pr_open 12/10/2024, 4:12:42 AM -- [Bug]: Cannot recover from \"Agent stuck in loop\"",
      "description": "### Is there an existing issue for the same bug?\n\n- [X] I have checked the existing issues.\n\n### Describe the bug and reproduction steps\n\nOnce we stuck in \"agent stuck in loop\", we cannot send subsequent messages to the agent anymore.\r\n\r\n<img width=\"484\" alt=\"image\" src=\"https://github.com/user-attachments/assets/fe5edfea-f3fb-4453-8f36-093c39af993b\">\r\n\n\n### OpenHands Installation\n\nDocker command in README\n\n### OpenHands Version\n\n_No response_\n\n### Operating System\n\nNone\n\n### Logs, Errors, Scree...",
      "prUrl": "https://api.github.com/repos/All-Hands-AI/OpenHands/pulls/5500"
    },
    {
      "id": "issue-5480-2530243035",
      "type": "issue",
      "status": "pr_open",
      "timestamp": "2024-12-10T04:12:42Z",
      "url": "https://github.com/All-Hands-AI/OpenHands/issues/5480#issuecomment-2530257505",
      "title": "ISSUE pr_open 12/10/2024, 4:12:42 AM -- [Bug]: Cannot recover from \"Agent stuck in loop\"",
      "description": "### Is there an existing issue for the same bug?\n\n- [X] I have checked the existing issues.\n\n### Describe the bug and reproduction steps\n\nOnce we stuck in \"agent stuck in loop\", we cannot send subsequent messages to the agent anymore.\r\n\r\n<img width=\"484\" alt=\"image\" src=\"https://github.com/user-attachments/assets/fe5edfea-f3fb-4453-8f36-093c39af993b\">\r\n\n\n### OpenHands Installation\n\nDocker command in README\n\n### OpenHands Version\n\n_No response_\n\n### Operating System\n\nNone\n\n### Logs, Errors, Scree...",
      "prUrl": "https://api.github.com/repos/All-Hands-AI/OpenHands/pulls/5500"
    },
    {
      "id": "issue-5492-2530226892",
      "type": "issue",
      "status": "pr_open",
      "timestamp": "2024-12-10T04:07:25Z",
      "url": "https://github.com/All-Hands-AI/OpenHands/issues/5492#issuecomment-2530244805",
      "title": "ISSUE pr_open 12/10/2024, 4:07:25 AM -- [Bug]: Regression on Anthropic due to empty content hack for Bedrock",
      "description": "### Is there an existing issue for the same bug?\r\n\r\n- [X] I have checked the existing issues.\r\n\r\n### Describe the bug and reproduction steps\r\n\r\nThis fix https://github.com/All-Hands-AI/OpenHands/pull/4935 to special case empty content string for Bedrock is causing regression with Anthropic tool call that has empty output.\r\n\r\nThis is the bug:\r\n```\r\nmessage.py#_list_serializer\r\n        # pop content if it's empty\r\n        if not content or (\r\n            len(content) == 1\r\n            and content[...",
      "prUrl": "https://api.github.com/repos/All-Hands-AI/OpenHands/pulls/5498"
    },
    {
      "id": "pr-5483-2529725095",
      "type": "pr",
      "status": "failure",
      "timestamp": "2024-12-09T23:28:24Z",
      "url": "https://github.com/All-Hands-AI/OpenHands/pull/5483#issuecomment-2529777556",
      "title": "PR failure 12/9/2024, 11:28:24 PM -- Fix issue #5478: Add color to the line next to \"Ran a XXX Command\" based on return value",
      "description": "This pull request fixes #5478.\n\nThe issue has been successfully resolved. The AI implemented a complete solution that addresses the original request to visually indicate command execution success/failure through line colors. Specifically:\n\n1. Added necessary data structures (success property) in both frontend and backend\n2. Implemented color-coding logic:\n   - Green for successful commands (exit code 0)\n   - Red for failed commands (non-zero exit code)\n   - Gray for other messages (default)\n3. M..."
    },
    {
      "id": "pr-5483-2529345378",
      "type": "pr",
      "status": "failure",
      "timestamp": "2024-12-09T20:13:26Z",
      "url": "https://github.com/All-Hands-AI/OpenHands/pull/5483#issuecomment-2529349069",
      "title": "PR failure 12/9/2024, 8:13:26 PM -- Fix issue #5478: Add color to the line next to \"Ran a XXX Command\" based on return value",
      "description": "This pull request fixes #5478.\n\nThe issue has been successfully resolved. The AI implemented a complete solution that addresses the original request to visually indicate command execution success/failure through line colors. Specifically:\n\n1. Added necessary data structures (success property) in both frontend and backend\n2. Implemented color-coding logic:\n   - Green for successful commands (exit code 0)\n   - Red for failed commands (non-zero exit code)\n   - Gray for other messages (default)\n3. M..."
    },
    {
      "id": "pr-5484-2529337741",
      "type": "pr",
      "status": "failure",
      "timestamp": "2024-12-09T20:11:41Z",
      "url": "https://github.com/All-Hands-AI/OpenHands/pull/5484#issuecomment-2529346060",
      "title": "PR failure 12/9/2024, 8:11:41 PM -- Remove Beta label from Browser tab",
      "description": "This PR removes the Beta label from the Browser tab in the frontend interface.\n\n---\n\nTo run this PR locally, use the following command:\n```\ndocker run -it --rm   -p 3000:3000   -v /var/run/docker.sock:/var/run/docker.sock   --add-host host.docker.internal:host-gateway   -e SANDBOX_RUNTIME_CONTAINER_IMAGE=docker.all-hands.dev/all-hands-ai/runtime:0df0ea7-nikolaik   --name openhands-app-0df0ea7   docker.all-hands.dev/all-hands-ai/openhands:0df0ea7\n```"
    },
    {
      "id": "issue-5478-2529207532",
      "type": "issue",
      "status": "pr_open",
      "timestamp": "2024-12-09T19:44:44Z",
      "url": "https://github.com/All-Hands-AI/OpenHands/issues/5478#issuecomment-2529253200",
      "title": "ISSUE pr_open 12/9/2024, 7:44:44 PM -- Add color to the line next to \"Ran a XXX Command\" based on return value",
      "description": "**What problem or use case are you trying to solve?**\r\n\r\nIn the interface, we have \"Ran a Bash Command\" or \"Ran a Jupyter Command\" with a line next to it.\r\n\r\n<img width=\"416\" alt=\"Screenshot 2024-12-09 at 2 30 39 PM\" src=\"https://github.com/user-attachments/assets/87aa4a2e-6984-4f26-8c94-5140b8049260\">\r\n\r\nIt would be nice to know if the command was successful or not.\r\n\r\n**Describe the UX of the solution you'd like**\r\n\r\nWe could change the color of the line depending on the return value. If the c...",
      "prUrl": "https://api.github.com/repos/All-Hands-AI/OpenHands/pulls/5483"
    },
    {
      "id": "issue-5439-2529212562",
      "type": "issue",
      "status": "pr_open",
      "timestamp": "2024-12-09T19:37:51Z",
      "url": "https://github.com/All-Hands-AI/OpenHands/issues/5439#issuecomment-2529227186",
      "title": "ISSUE pr_open 12/9/2024, 7:37:51 PM -- [Bug]: Scrollbar for the file goes out of screen",
      "description": "### Is there an existing issue for the same bug?\r\n\r\n- [X] I have checked the existing issues.\r\n\r\n### Describe the bug and reproduction steps\r\n\r\nNot sure if this is because the file is really large but the scroll goes beyond what's the displayed on the screen.\r\n\r\n![Screenshot 2024-12-06 at 12 31 59 PM](https://github.com/user-attachments/assets/bcba1770-1689-456d-b082-b7f96b1fea13)\r\n\r\n\r\n### OpenHands Installation\r\n\r\nDocker command in README\r\n\r\n### OpenHands Version\r\n\r\nmain\r\n\r\n### Operating System...",
      "prUrl": "https://api.github.com/repos/All-Hands-AI/OpenHands/pulls/5481"
    },
    {
      "id": "issue-5465-2529206198",
      "type": "issue",
      "status": "no_pr",
      "timestamp": "2024-12-09T19:34:14Z",
      "url": "https://github.com/All-Hands-AI/OpenHands/issues/5465#issuecomment-2529214825",
      "title": "ISSUE no_pr 12/9/2024, 7:34:14 PM -- [Bug]: [Resolver] PR (without a label?) fails workflow",
      "description": "### Is there an existing issue for the same bug?\r\n\r\n- [X] I have checked the existing issues.\r\n\r\n### Describe the bug and reproduction steps\r\n\r\nI asked openhands-agent to do something, using the macro.\r\nhttps://github.com/All-Hands-AI/OpenHands/pull/5435#issuecomment-2525041512\r\n\r\nAction log:\r\n\r\n> Run if [[ \"\" == \"fix-me-experimental\" ]] ||\r\n  if [[ \"\" == \"fix-me-experimental\" ]] ||\r\n     ([[ \"issue_comment\" == \"issue_comment\" || \"issue_comment\" == \"pull_request_review_comment\" ]] &&\r\n      [[ \"..."
    },
    {
      "id": "issue-5471-2529155965",
      "type": "issue",
      "status": "pr_merged",
      "timestamp": "2024-12-09T19:19:50Z",
      "url": "https://github.com/All-Hands-AI/OpenHands/issues/5471#issuecomment-2529162588",
      "title": "ISSUE pr_merged 12/9/2024, 7:19:50 PM -- Resolver: LLM_MODEL should use \"variable\" instead of \"secret\" ",
      "description": "**What problem or use case are you trying to solve?**\nCurrently it's impossible to see in the Resolver logs what LLM was used and it seems unnecessary to hide it. \n\n**Describe the UX of the solution you'd like**\nAny settings that aren't sensitive should use action \"variables\" instead of \"secrets\".\n\n**Do you have thoughts on the technical implementation?**\n\n**Describe alternatives you've considered**\n\n**Additional context**\n",
      "prUrl": "https://api.github.com/repos/All-Hands-AI/OpenHands/pulls/5477"
    },
    {
      "id": "issue-5456-2525313465",
      "type": "issue",
      "status": "pr_closed",
      "timestamp": "2024-12-07T21:32:49Z",
      "url": "https://github.com/All-Hands-AI/OpenHands/issues/5456#issuecomment-2525317055",
      "title": "ISSUE pr_closed 12/7/2024, 9:32:49 PM -- [Bug]: Too many detected issues in github resolver",
      "description": "### Is there an existing issue for the same bug?\n\n- [X] I have checked the existing issues.\n\n### Describe the bug and reproduction steps\n\nThere are too many issues detected in the github resolver. For instance, running on this PR: https://github.com/All-Hands-AI/OpenHands/pull/5449\r\n\r\nFinds many issues that are not mentioned anywhere in the PR:\r\n```\r\n$ poetry run python openhands/resolver/resolve_issue.py --repo all-hands-ai/openhands --issue-type pr --issue-number 5432\r\n16:15:54 - openhands:INF...",
      "prUrl": "https://api.github.com/repos/All-Hands-AI/OpenHands/pulls/5457"
    },
    {
      "id": "issue-5450-2525287781",
      "type": "issue",
      "status": "pr_merged",
      "timestamp": "2024-12-07T19:37:04Z",
      "url": "https://github.com/All-Hands-AI/OpenHands/issues/5450#issuecomment-2525288775",
      "title": "ISSUE pr_merged 12/7/2024, 7:37:04 PM -- In openhands-resolver.yml, request code review from the person who initiated the workflow",
      "description": "**What problem or use case are you trying to solve?**\r\n\r\nopenhands-resolver.yml often results in OpenHands opening a pull request on a repository, but these pull requests can become lost.\r\n\r\n**Describe the UX of the solution you'd like**\r\n\r\nWhen the Open Hands resolver initiates or updates a pull request, it should request review from the person who initiated the GitHub workflow. This will put the pr on the list of the person who initiated the workflow, making it less likely that they will miss ...",
      "prUrl": "https://api.github.com/repos/All-Hands-AI/OpenHands/pulls/5451"
    },
    {
      "id": "issue-5448-2525284593",
      "type": "issue",
      "status": "pr_open",
      "timestamp": "2024-12-07T19:27:48Z",
      "url": "https://github.com/All-Hands-AI/OpenHands/issues/5448#issuecomment-2525286456",
      "title": "ISSUE pr_open 12/7/2024, 7:27:48 PM -- When using the GitHub resolver on a PR, automatically pipe in failure info",
      "description": "**What problem or use case are you trying to solve?**\r\n\r\nOne common use case of the GitHub resolver is to update a PR, and it is also frequent that the pr will have CI actions failing or merge conflicts. If we indicate to the agent that CI actions are failing or there are merge conflicts, we could improve the possibility that it will fix these while making any other changes.\r\n\r\n**Describe the UX of the solution you'd like**\r\n\r\nWhen they get help is over starts working on a PR, we make calls to t...",
      "prUrl": "https://api.github.com/repos/All-Hands-AI/OpenHands/pulls/5449"
    },
    {
      "id": "pr-5435-2524954159",
      "type": "pr",
      "status": "failure",
      "timestamp": "2024-12-07T08:03:00Z",
      "url": "https://github.com/All-Hands-AI/OpenHands/pull/5435#issuecomment-2524997119",
      "title": "PR failure 12/7/2024, 8:03:00 AM -- Fix issue #4706: [Feature]: Give descriptive name to downloaded zip file",
      "description": "**End-user friendly description of the problem this fixes or functionality that this introduces**\r\n\r\n- [ ] Include this change in the Release Notes. If checked, you must provide an **end-user friendly** description for your change below\r\n\r\n---\r\n**Give a summary of what the PR does, explaining any non-trivial design decisions**\r\n\r\nThe issue has not been successfully resolved. The last message shows that the test command failed with exit code 1, indicating that the unit tests are failing. This sug..."
    },
    {
      "id": "pr-5435-2524996237",
      "type": "pr",
      "status": "failure",
      "timestamp": "2024-12-07T08:03:00Z",
      "url": "https://github.com/All-Hands-AI/OpenHands/pull/5435#issuecomment-2524997119",
      "title": "PR failure 12/7/2024, 8:03:00 AM -- Fix issue #4706: [Feature]: Give descriptive name to downloaded zip file",
      "description": "**End-user friendly description of the problem this fixes or functionality that this introduces**\r\n\r\n- [ ] Include this change in the Release Notes. If checked, you must provide an **end-user friendly** description for your change below\r\n\r\n---\r\n**Give a summary of what the PR does, explaining any non-trivial design decisions**\r\n\r\nThe issue has not been successfully resolved. The last message shows that the test command failed with exit code 1, indicating that the unit tests are failing. This sug..."
    },
    {
      "id": "issue-5445-2524954999",
      "type": "issue",
      "status": "pr_open",
      "timestamp": "2024-12-07T06:01:26Z",
      "url": "https://github.com/All-Hands-AI/OpenHands/issues/5445#issuecomment-2524956314",
      "title": "ISSUE pr_open 12/7/2024, 6:01:26 AM -- [Bug]: Assigning label on PR doesn't kickstart resolver",
      "description": "### Is there an existing issue for the same bug?\n\n- [X] I have checked the existing issues.\n\n### Describe the bug and reproduction steps\n\nTried adding `fix-me`/`fix-me-experimental` label to #5342 but it didn't kickstart the resolver\n\n### OpenHands Installation\n\nOther\n\n### OpenHands Version\n\nlatest,main\n\n### Operating System\n\nNone\n\n### Logs, Errors, Screenshots, and Additional Context\n\n_No response_",
      "prUrl": "https://api.github.com/repos/All-Hands-AI/OpenHands/pulls/5446"
    },
    {
      "id": "issue-4706-2522125016",
      "type": "issue",
      "status": "no_pr",
      "timestamp": "2024-12-06T16:29:03Z",
      "url": "https://github.com/All-Hands-AI/OpenHands/issues/4706#issuecomment-2523682063",
      "title": "ISSUE no_pr 12/6/2024, 4:29:03 PM -- [Feature]: Give descriptive name to downloaded zip file",
      "description": "**What problem or use case are you trying to solve?**\r\n\r\nCurrently, when we use the frontend feature to download a zip file, it is always called `workspace.zip`. If you do this over and over again, you get a lot of files called `workspace.zip` and it's a little bit annoying to keep track of which is which.\r\n\r\n**Describe the UX of the solution you'd like**\r\n\r\nIt would be nice if this file was given a descriptive name.\r\n\r\n**Do you have thoughts on the technical implementation?**\r\n\r\nWhen the \"downl..."
    },
    {
      "id": "issue-4706-2523586809",
      "type": "issue",
      "status": "no_pr",
      "timestamp": "2024-12-06T16:29:03Z",
      "url": "https://github.com/All-Hands-AI/OpenHands/issues/4706#issuecomment-2523682063",
      "title": "ISSUE no_pr 12/6/2024, 4:29:03 PM -- [Feature]: Give descriptive name to downloaded zip file",
      "description": "**What problem or use case are you trying to solve?**\r\n\r\nCurrently, when we use the frontend feature to download a zip file, it is always called `workspace.zip`. If you do this over and over again, you get a lot of files called `workspace.zip` and it's a little bit annoying to keep track of which is which.\r\n\r\n**Describe the UX of the solution you'd like**\r\n\r\nIt would be nice if this file was given a descriptive name.\r\n\r\n**Do you have thoughts on the technical implementation?**\r\n\r\nWhen the \"downl..."
    },
    {
      "id": "issue-5359-2516062933",
      "type": "issue",
      "status": "no_pr",
      "timestamp": "2024-12-04T03:58:51Z",
      "url": "https://github.com/All-Hands-AI/OpenHands/issues/5359#issuecomment-2516134796",
      "title": "ISSUE no_pr 12/4/2024, 3:58:51 AM -- [Resolver] The LLM uses a non-optimal way to install openhands",
      "description": "**What problem or use case are you trying to solve?**\r\n\r\nCheck the openhands resolver functionality.\r\nWhen the openhands resolver is running:\r\n\r\nI see these days the LLM:\r\n- trying to run pytest\r\n- finds out it's not installed, so it runs `poetry install`\r\n- it has in the prompt the info that it should set up the project with `make build`, but that doesn't seem to happen\r\n\r\nThe problem is that `poetry install` installs all optional dependencies like `torch`, `nvidia-cuda*` etc.\r\n\r\nBy default, `m..."
    },
    {
      "id": "issue-5359-2516126395",
      "type": "issue",
      "status": "no_pr",
      "timestamp": "2024-12-04T03:58:51Z",
      "url": "https://github.com/All-Hands-AI/OpenHands/issues/5359#issuecomment-2516134796",
      "title": "ISSUE no_pr 12/4/2024, 3:58:51 AM -- [Resolver] The LLM uses a non-optimal way to install openhands",
      "description": "**What problem or use case are you trying to solve?**\r\n\r\nCheck the openhands resolver functionality.\r\nWhen the openhands resolver is running:\r\n\r\nI see these days the LLM:\r\n- trying to run pytest\r\n- finds out it's not installed, so it runs `poetry install`\r\n- it has in the prompt the info that it should set up the project with `make build`, but that doesn't seem to happen\r\n\r\nThe problem is that `poetry install` installs all optional dependencies like `torch`, `nvidia-cuda*` etc.\r\n\r\nBy default, `m..."
    },
    {
      "id": "issue-5383-2516059755",
      "type": "issue",
      "status": "pr_merged",
      "timestamp": "2024-12-04T03:24:40Z",
      "url": "https://github.com/All-Hands-AI/OpenHands/issues/5383#issuecomment-2516089046",
      "title": "ISSUE pr_merged 12/4/2024, 3:24:40 AM -- [Bug]: LLM Cost is added to the `metrics` twice",
      "description": "### Is there an existing issue for the same bug?\r\n\r\n- [X] I have checked the existing issues.\r\n\r\n### Describe the bug and reproduction steps\r\n\r\nIn the file `openhands/llm/llm.py`, when the LLM completion is invoked, the method `_completion_cost` will be called twice.\r\n\r\nOne is when preparing to store the log data for this completion:\r\nhttps://github.com/All-Hands-AI/OpenHands/blob/2f11634ccaeb3aa38893a994d53ff280bbf485d0/openhands/llm/llm.py#L231-L238\r\n\r\nThe other one is when calling the final c...",
      "prUrl": "https://api.github.com/repos/All-Hands-AI/OpenHands/pulls/5396"
    },
    {
      "id": "issue-5383-2516080771",
      "type": "issue",
      "status": "pr_merged",
      "timestamp": "2024-12-04T03:24:40Z",
      "url": "https://github.com/All-Hands-AI/OpenHands/issues/5383#issuecomment-2516089046",
      "title": "ISSUE pr_merged 12/4/2024, 3:24:40 AM -- [Bug]: LLM Cost is added to the `metrics` twice",
      "description": "### Is there an existing issue for the same bug?\r\n\r\n- [X] I have checked the existing issues.\r\n\r\n### Describe the bug and reproduction steps\r\n\r\nIn the file `openhands/llm/llm.py`, when the LLM completion is invoked, the method `_completion_cost` will be called twice.\r\n\r\nOne is when preparing to store the log data for this completion:\r\nhttps://github.com/All-Hands-AI/OpenHands/blob/2f11634ccaeb3aa38893a994d53ff280bbf485d0/openhands/llm/llm.py#L231-L238\r\n\r\nThe other one is when calling the final c...",
      "prUrl": "https://api.github.com/repos/All-Hands-AI/OpenHands/pulls/5396"
    },
    {
      "id": "pr-5308-2514893031",
      "type": "pr",
      "status": "failure",
      "timestamp": "2024-12-03T15:40:06Z",
      "url": "https://github.com/All-Hands-AI/OpenHands/pull/5308#issuecomment-2514913053",
      "title": "PR failure 12/3/2024, 3:40:06 PM -- Fix issue #5112: [Bug]: \"Push to GitHub\" shows up even if there's no repo connected",
      "description": "This pull request fixes #5112.\n\nThe issue has been successfully resolved. The PR addresses the core problem by fixing the logic for when the \"Push to GitHub\" button should be displayed. The key changes were:\n\n1. Adding a new `hasConnectedRepo` prop that specifically checks for an actual connected repository (via `githubData`)\n2. Modifying the display logic to require both GitHub connection AND a connected repository\n3. This ensures the button only appears when functionally useful (when there's a..."
    },
    {
      "id": "pr-5284-2501338361",
      "type": "pr",
      "status": "failure",
      "timestamp": "2024-12-01T01:19:17Z",
      "url": "https://github.com/All-Hands-AI/OpenHands/pull/5284#issuecomment-2509509888",
      "title": "PR failure 12/1/2024, 1:19:17 AM -- feat: Add LocalRuntime and rename EventStreamRuntime to DockerRuntime",
      "description": "This PR adds a new LocalRuntime implementation and renames EventStreamRuntime to LocalDockerRuntime for better clarity.\r\n\r\n### Changes\r\n\r\n- Add new LocalRuntime implementation that runs action_execution_server directly on the host machine\r\n- Rename EventStreamRuntime to LocalDockerRuntime for better clarity\r\n- Move runtime implementations to dedicated directories (local/ and docker/)\r\n- Update documentation to reflect runtime changes and add LocalRuntime description\r\n\r\n### Benefits\r\n\r\n- Provides..."
    },
    {
      "id": "pr-5284-2507055044",
      "type": "pr",
      "status": "failure",
      "timestamp": "2024-12-01T01:19:17Z",
      "url": "https://github.com/All-Hands-AI/OpenHands/pull/5284#issuecomment-2509509888",
      "title": "PR failure 12/1/2024, 1:19:17 AM -- feat: Add LocalRuntime and rename EventStreamRuntime to DockerRuntime",
      "description": "This PR adds a new LocalRuntime implementation and renames EventStreamRuntime to LocalDockerRuntime for better clarity.\r\n\r\n### Changes\r\n\r\n- Add new LocalRuntime implementation that runs action_execution_server directly on the host machine\r\n- Rename EventStreamRuntime to LocalDockerRuntime for better clarity\r\n- Move runtime implementations to dedicated directories (local/ and docker/)\r\n- Update documentation to reflect runtime changes and add LocalRuntime description\r\n\r\n### Benefits\r\n\r\n- Provides..."
    },
    {
      "id": "pr-5284-2508709941",
      "type": "pr",
      "status": "failure",
      "timestamp": "2024-12-01T01:19:17Z",
      "url": "https://github.com/All-Hands-AI/OpenHands/pull/5284#issuecomment-2509509888",
      "title": "PR failure 12/1/2024, 1:19:17 AM -- feat: Add LocalRuntime and rename EventStreamRuntime to DockerRuntime",
      "description": "This PR adds a new LocalRuntime implementation and renames EventStreamRuntime to LocalDockerRuntime for better clarity.\r\n\r\n### Changes\r\n\r\n- Add new LocalRuntime implementation that runs action_execution_server directly on the host machine\r\n- Rename EventStreamRuntime to LocalDockerRuntime for better clarity\r\n- Move runtime implementations to dedicated directories (local/ and docker/)\r\n- Update documentation to reflect runtime changes and add LocalRuntime description\r\n\r\n### Benefits\r\n\r\n- Provides..."
    },
    {
      "id": "pr-5284-2509025424",
      "type": "pr",
      "status": "failure",
      "timestamp": "2024-12-01T01:19:17Z",
      "url": "https://github.com/All-Hands-AI/OpenHands/pull/5284#issuecomment-2509509888",
      "title": "PR failure 12/1/2024, 1:19:17 AM -- feat: Add LocalRuntime and rename EventStreamRuntime to DockerRuntime",
      "description": "This PR adds a new LocalRuntime implementation and renames EventStreamRuntime to LocalDockerRuntime for better clarity.\r\n\r\n### Changes\r\n\r\n- Add new LocalRuntime implementation that runs action_execution_server directly on the host machine\r\n- Rename EventStreamRuntime to LocalDockerRuntime for better clarity\r\n- Move runtime implementations to dedicated directories (local/ and docker/)\r\n- Update documentation to reflect runtime changes and add LocalRuntime description\r\n\r\n### Benefits\r\n\r\n- Provides..."
    },
    {
      "id": "pr-5284-2509489022",
      "type": "pr",
      "status": "failure",
      "timestamp": "2024-12-01T01:19:17Z",
      "url": "https://github.com/All-Hands-AI/OpenHands/pull/5284#issuecomment-2509509888",
      "title": "PR failure 12/1/2024, 1:19:17 AM -- feat: Add LocalRuntime and rename EventStreamRuntime to DockerRuntime",
      "description": "This PR adds a new LocalRuntime implementation and renames EventStreamRuntime to LocalDockerRuntime for better clarity.\r\n\r\n### Changes\r\n\r\n- Add new LocalRuntime implementation that runs action_execution_server directly on the host machine\r\n- Rename EventStreamRuntime to LocalDockerRuntime for better clarity\r\n- Move runtime implementations to dedicated directories (local/ and docker/)\r\n- Update documentation to reflect runtime changes and add LocalRuntime description\r\n\r\n### Benefits\r\n\r\n- Provides..."
    },
    {
      "id": "pr-5332-2509492299",
      "type": "pr",
      "status": "failure",
      "timestamp": "2024-12-01T00:42:28Z",
      "url": "https://github.com/All-Hands-AI/OpenHands/pull/5332#issuecomment-2509498863",
      "title": "PR failure 12/1/2024, 12:42:28 AM -- Fix issue #4864: [Bug]:     make start-backend results in NotImplementedError: Non-relative patterns are unsupported",
      "description": "This pull request fixes #4864.\n\nThe issue has been successfully resolved with a simple but effective fix. The original error was caused by using absolute paths with uvicorn's `--reload-exclude` option, which isn't supported by Python's `pathlib.glob()`. \n\nThe solution implemented was to modify the Makefile's `start-backend` target to use a relative path `\"./workspace\"` instead of `$(shell pwd)/workspace`. This change resolved the `NotImplementedError` that was preventing the backend from startin..."
    },
    {
      "id": "issue-5112-2504963369",
      "type": "issue",
      "status": "pr_open",
      "timestamp": "2024-11-27T23:19:45Z",
      "url": "https://github.com/All-Hands-AI/OpenHands/issues/5112#issuecomment-2504967807",
      "title": "ISSUE pr_open 11/27/2024, 11:19:45 PM -- [Bug]: \"Push to GitHub\" shows up even if there's no repo connected",
      "description": "### Is there an existing issue for the same bug?\n\n- [X] I have checked the existing issues.\n\n### Describe the bug and reproduction steps\n\n<img width=\"793\" alt=\"Screenshot 2024-11-18 at 4 37 56 PM\" src=\"https://github.com/user-attachments/assets/2eb98222-45b8-4d9e-a3f7-8a1feb5339a5\">\r\n\r\nRepro:\r\n* start a new project from scratch\r\n* push to github appears\r\n\r\nMy guess is it currently shows up if you're logged into GitHub, rather than if there's a repo connected to the current project. The latter is...",
      "prUrl": "https://api.github.com/repos/All-Hands-AI/OpenHands/pulls/5308"
    },
    {
      "id": "issue-5234-2502452335",
      "type": "issue",
      "status": "no_pr",
      "timestamp": "2024-11-27T01:46:40Z",
      "url": "https://github.com/All-Hands-AI/OpenHands/issues/5234#issuecomment-2502467549",
      "title": "ISSUE no_pr 11/27/2024, 1:46:40 AM -- [Bug]: [Resolver] Error when parsing the JSON response on success",
      "description": "### Is there an existing issue for the same bug?\r\n\r\n- [X] I have checked the existing issues.\r\n\r\n### Describe the bug and reproduction steps\r\n\r\nThis seems to happen all the time: (I think? I don't see a successful comment even if the agent did solve the task, please let me know if I'm doing something wrong, I'm not too familiar with the resolver ❤️ )\r\n\r\nNOTE: the issue is that success_explanation fails parsing as JSON.\r\n\r\n```\r\n06:13:25 - openhands:ERROR: resolve_issue.py:260 - Failed to parse su..."
    },
    {
      "id": "issue-2947-2496600387",
      "type": "issue",
      "status": "no_pr",
      "timestamp": "2024-11-25T03:43:52Z",
      "url": "https://github.com/All-Hands-AI/OpenHands/issues/2947#issuecomment-2496615880",
      "title": "ISSUE no_pr 11/25/2024, 3:43:52 AM -- Feat: make use of litellm's response \"usage\" data",
      "description": "**What problem or use case are you trying to solve?**\r\n\r\n**TASK**\r\n\r\nWe want to enhance our get_token_count() implementation in llm.py, to take advantage of the token counts we are provided from our dependencies, if available, and only fallback to count them if they are not already available.\r\n\r\nRead the llm.py file. It uses the litellm library, and you can find some code that uses the Usage object from litellm, too.\r\n\r\nThis `usage` data, when available, provides live token counts. It will be av..."
    },
    {
      "id": "issue-5015-2496303049",
      "type": "issue",
      "status": "no_pr",
      "timestamp": "2024-11-24T23:02:07Z",
      "url": "https://github.com/All-Hands-AI/OpenHands/issues/5015#issuecomment-2496306399",
      "title": "ISSUE no_pr 11/24/2024, 11:02:07 PM -- [Bug]: Headless mode awaits for requested user feedback without showing any text for what that feedback should be",
      "description": "### Is there an existing issue for the same bug?\r\n\r\n- [X] I have checked the existing issues.\r\n\r\n### Describe the bug and reproduction steps\r\n\r\nCommand to run:\r\n\r\n```\r\ndocker run -it \\\r\n    --pull=always \\\r\n    -e SANDBOX_RUNTIME_CONTAINER_IMAGE=docker.all-hands.dev/all-hands-ai/runtime:0.13-nikolaik \\\r\n    -e SANDBOX_USER_ID=$(id -u) \\\r\n    -e WORKSPACE_MOUNT_PATH=$(pwd) \\\r\n    -e LLM_API_KEY=*** \\\r\n    -e LLM_MODEL=\"anthropic/claude-3-5-sonnet-20241022\" \\\r\n    -v $WORKSPACE_BASE:/opt/workspace..."
    },
    {
      "id": "issue-5154-2495788641",
      "type": "issue",
      "status": "pr_closed",
      "timestamp": "2024-11-24T04:02:33Z",
      "url": "https://github.com/All-Hands-AI/OpenHands/issues/5154#issuecomment-2495791202",
      "title": "ISSUE pr_closed 11/24/2024, 4:02:33 AM -- [Bug]: FinishTool doesn't have a tool response",
      "description": "### Is there an existing issue for the same bug?\r\n\r\n- [X] I have checked the existing issues.\r\n\r\n### Describe the bug and reproduction steps\r\n\r\nReported [on slack](https://openhands-ai.slack.com/archives/C06R25BT5B2/p1732130085002229). Regression from function calling.\r\n\r\nFinishAction with `source=agent` is not the last thing that happens when running with UI or restoring session in CLI, but our backend doesn't give it a tool response. CodeAct \"forgets\" it, which makes other things not play nice...",
      "prUrl": "https://api.github.com/repos/All-Hands-AI/OpenHands/pulls/5231"
    },
    {
      "id": "pr-5226-2495596128",
      "type": "pr",
      "status": "failure",
      "timestamp": "2024-11-23T18:36:05Z",
      "url": "https://github.com/All-Hands-AI/OpenHands/pull/5226#issuecomment-2495609874",
      "title": "PR failure 11/23/2024, 6:36:05 PM -- Fix issue #5186: [Bug]: Fix up inline code styles in chat window",
      "description": "This pull request fixes #5186.\n\nThe issue has been successfully resolved. The AI agent made specific improvements to the inline code styling that directly address the reported concerns about font size and visual appearance:\n\n1. Font size was adjusted upward (from 85% to 90%) to address the sizing concern\n2. Background and text colors were modified using appropriate theme variables to improve visibility and contrast\n3. Added a border to make code blocks more distinct\n4. Fine-tuned the border radi..."
    },
    {
      "id": "issue-5229-2495521927",
      "type": "issue",
      "status": "no_pr",
      "timestamp": "2024-11-23T15:59:49Z",
      "url": "https://github.com/All-Hands-AI/OpenHands/issues/5229#issuecomment-2495522602",
      "title": "ISSUE no_pr 11/23/2024, 3:59:49 PM -- [Documentation]: Micro-agents",
      "description": "**What problem or use case are you trying to solve?**\r\n\r\nCurrently in the `openhands/agenthub/codeact_agent` directory, we have an implementation of micro agents, but this is not documented.\r\n\r\nTo do so, we can:\r\n1. read the implementation of codeact agent\r\n2. read an example microagent in `openhands/agenthub/codeact_agent/micro/github.md`\r\n3. add documentation to `openhands/agenthub/codeact_agent/README.md`\r\n"
    },
    {
      "id": "issue-5195-2495495143",
      "type": "issue",
      "status": "pr_closed",
      "timestamp": "2024-11-23T14:25:56Z",
      "url": "https://github.com/All-Hands-AI/OpenHands/issues/5195#issuecomment-2495496472",
      "title": "ISSUE pr_closed 11/23/2024, 2:25:56 PM -- [Resolver]: Adding unit tests to Github workflows",
      "description": "**Summary**\r\nI would like to add unit tests for Github workflows for `openhands-resolver`.\r\n\r\n**Motivation**\r\nThe workflow definitions are the entry points for `openhands-resolver`, making it the largest potential single point of failure. Currently making changes to the workflows needs to be manually tested in a separate repo. We've added many ways to trigger the workflows, so testing all of them manually tends to be tedious and often error prone. A way to do tests (at least a fraction of them) ...",
      "prUrl": "https://api.github.com/repos/All-Hands-AI/OpenHands/pulls/5227"
    },
    {
      "id": "issue-5186-2495495630",
      "type": "issue",
      "status": "pr_merged",
      "timestamp": "2024-11-23T14:25:51Z",
      "url": "https://github.com/All-Hands-AI/OpenHands/issues/5186#issuecomment-2495496450",
      "title": "ISSUE pr_merged 11/23/2024, 2:25:51 PM -- [Bug]: Fix up inline code styles in chat window",
      "description": "### Is there an existing issue for the same bug?\n\n- [X] I have checked the existing issues.\n\n### Describe the bug and reproduction steps\n\nThe font size for the code is a little bigger, and the spaces feel off. We should maybe change text color and background color too, to make it more apparent\r\n\r\n<img width=\"343\" alt=\"Screenshot 2024-11-21 at 3 04 50 PM\" src=\"https://github.com/user-attachments/assets/f1c2df6f-face-4b6d-b213-4257a9fbbc90\">\r\n\n\n### OpenHands Installation\n\napp.all-hands.dev\n\n### Op...",
      "prUrl": "https://api.github.com/repos/All-Hands-AI/OpenHands/pulls/5226"
    },
    {
      "id": "issue-5162-2489951095",
      "type": "issue",
      "status": "no_pr",
      "timestamp": "2024-11-21T02:46:16Z",
      "url": "https://github.com/All-Hands-AI/OpenHands/issues/5162#issuecomment-2489953661",
      "title": "ISSUE no_pr 11/21/2024, 2:46:16 AM -- docs: Improve GitHub token setup documentation in UI guide",
      "description": "The current documentation about GitHub token setup in the GUI mode guide is minimal and could be improved to help users better understand the process.\r\n\r\nNeeded improvements:\r\n\r\n1. Add step-by-step instructions for setting up a GitHub token locally:\r\n   - How to access the token settings in the UI\r\n   - Required token scopes and permissions\r\n   - How to enter and save the token\r\n\r\n2. Add information about organizational token policies:\r\n   - Note that organizational repositories may require addi..."
    },
    {
      "id": "issue-5112-2484768514",
      "type": "issue",
      "status": "pr_closed",
      "timestamp": "2024-11-19T06:03:50Z",
      "url": "https://github.com/All-Hands-AI/OpenHands/issues/5112#issuecomment-2484777977",
      "title": "ISSUE pr_closed 11/19/2024, 6:03:50 AM -- [Bug]: \"Push to GitHub\" shows up even if there's no repo connected",
      "description": "### Is there an existing issue for the same bug?\n\n- [X] I have checked the existing issues.\n\n### Describe the bug and reproduction steps\n\n<img width=\"793\" alt=\"Screenshot 2024-11-18 at 4 37 56 PM\" src=\"https://github.com/user-attachments/assets/2eb98222-45b8-4d9e-a3f7-8a1feb5339a5\">\r\n\r\nRepro:\r\n* start a new project from scratch\r\n* push to github appears\r\n\r\nMy guess is it currently shows up if you're logged into GitHub, rather than if there's a repo connected to the current project. The latter is...",
      "prUrl": "https://api.github.com/repos/All-Hands-AI/OpenHands/pulls/5118"
    },
    {
      "id": "issue-4828-2462874019",
      "type": "issue",
      "status": "pr_closed",
      "timestamp": "2024-11-07T17:58:14Z",
      "url": "https://github.com/All-Hands-AI/OpenHands/issues/4828#issuecomment-2462891889",
      "title": "ISSUE pr_closed 11/7/2024, 5:58:14 PM -- [Bug]: Chat interface empty state flickers for a brief moment until messages load",
      "description": "### Is there an existing issue for the same bug?\n\n- [X] I have checked the existing issues.\n\n### Describe the bug and reproduction steps\n\nIf there are messages that are yet to be received by the socket, the empty state UI is shown for a brief moment, resulting in an unpleasant flicker\n\n### OpenHands Installation\n\nDocker command in README\n\n### OpenHands Version\n\nmain\n\n### Operating System\n\nNone\n\n### Logs, Errors, Screenshots, and Additional Context\n\nWe should probably wait until socket is green",
      "prUrl": "https://api.github.com/repos/All-Hands-AI/OpenHands/pulls/4831"
    },
    {
      "id": "issue-4809-2461146053",
      "type": "issue",
      "status": "no_pr",
      "timestamp": "2024-11-07T01:50:59Z",
      "url": "https://github.com/All-Hands-AI/OpenHands/issues/4809#issuecomment-2461152418",
      "title": "ISSUE no_pr 11/7/2024, 1:50:59 AM -- [Bug]: Model does not support image upload when using `litellm_proxy/`",
      "description": "### Is there an existing issue for the same bug?\r\n\r\n- [X] I have checked the existing issues.\r\n\r\n### Describe the bug and reproduction steps\r\n\r\nI got the following error when using model `litellm_proxy/claude-3-5-sonnet-20241022` through a LiteLLM proxy. It supposed to support vision inputs.\r\n\r\n<img width=\"819\" alt=\"image\" src=\"https://github.com/user-attachments/assets/4c258708-0167-4c29-a647-f25b6a4b4327\">\r\n\r\nIn L345-L348 openhands/llm/llm.py, maybe we should also check for `litellm.support_vi..."
    },
    {
      "id": "issue-4769-2458390348",
      "type": "issue",
      "status": "no_pr",
      "timestamp": "2024-11-05T23:24:47Z",
      "url": "https://github.com/All-Hands-AI/OpenHands/issues/4769#issuecomment-2458397249",
      "title": "ISSUE no_pr 11/5/2024, 11:24:47 PM -- [Bug]: Markdown numbering is rendered weird",
      "description": "### Is there an existing issue for the same bug?\n\n- [X] I have checked the existing issues.\n\n### Describe the bug and reproduction steps\n\nThe agent is likely sending separate messages with \"1.\" \"2.\" \"3.\"\r\n\r\nMarkdown is weird in that it will render any number as \"1.\", i.e.\r\n\r\n```md\r\n42.\r\n86.\r\n93.\r\n```\r\n\r\nwill render as\r\n```\r\n1.\r\n2.\r\n3.\r\n```\r\n\r\nI bet we can turn this behavior off\r\n\r\n<img width=\"195\" alt=\"Screenshot 2024-11-05 at 6 12 59 PM\" src=\"https://github.com/user-attachments/assets/01ce1628-..."
    },
    {
      "id": "issue-4184-2390457010",
      "type": "issue",
      "status": "no_pr",
      "timestamp": "2024-10-03T11:44:22Z",
      "url": "https://github.com/All-Hands-AI/OpenHands/issues/4184#issuecomment-2391212519",
      "title": "ISSUE no_pr 10/3/2024, 11:44:22 AM -- [LLM] Support LLM routing through notdiamond",
      "description": "**What problem or use case are you trying to solve?**\r\n\r\nNot Diamond intelligently identifies which LLM is best-suited to respond to any given query. We want to implement a mechanism in OpenHands to support this type of \"LLM\" selector.\r\n\r\n**Describe the UX of the solution you'd like**\r\n\r\nIdeally, use should define a \"LLMRouter\" as a special type of LLM with some special configs (e.g., multiple keys for different providers). And user can just put in keys, and select that router, and OpenHands wil..."
    },
    {
      "id": "issue-4184-2391198261",
      "type": "issue",
      "status": "no_pr",
      "timestamp": "2024-10-03T11:44:22Z",
      "url": "https://github.com/All-Hands-AI/OpenHands/issues/4184#issuecomment-2391212519",
      "title": "ISSUE no_pr 10/3/2024, 11:44:22 AM -- [LLM] Support LLM routing through notdiamond",
      "description": "**What problem or use case are you trying to solve?**\r\n\r\nNot Diamond intelligently identifies which LLM is best-suited to respond to any given query. We want to implement a mechanism in OpenHands to support this type of \"LLM\" selector.\r\n\r\n**Describe the UX of the solution you'd like**\r\n\r\nIdeally, use should define a \"LLMRouter\" as a special type of LLM with some special configs (e.g., multiple keys for different providers). And user can just put in keys, and select that router, and OpenHands wil..."
    }
  ],
  "lastUpdated": "2024-12-10T19:43:11.083Z"
}